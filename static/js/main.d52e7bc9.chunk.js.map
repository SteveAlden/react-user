{"version":3,"sources":["components/UserB.js","components/DisplayUser.js","components/UserList.js","components/layout/HeaderB.js","components/DisplayUserB.js","App.js","serviceWorker.js","index.js"],"names":["UserB","state","hoverClassName","hoverCardBg","hoverCardText","hoverFont","onMouseOver","setState","onMouseOut","onMouseClick","name","this","props","user","style","textDecoration","to","id","Card","text","className","margin","backdropFilter","backgroundColor","Body","Text","Component","DisplayUser","userData","axios","get","match","params","then","res","data","userInfo","console","log","Container","elevation","ButtonBase","CardContent","Typography","color","email","UserList","dispUser","users","map","AppHeaderB","Navbar","paddingBottom","variant","Brand","Nav","Link","href","DisplayUserB","userImage","dataLoaded","setTimeout","filter","marginTop","Header","Skeleton","animation","width","Media","Image","src","roundedCircle","height","company","username","website","phone","catchPhrase","address","street","suite","city","zipcode","geo","lat","App","exact","path","render","Fragment","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d52e7bc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// import { grey } from '@material-ui/core/colors';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n// import Container from 'react-bootstrap/Container';\r\n// import { Col, Image, Media, Row, Button } from 'react-bootstrap';\r\n// function dispUser(name) {\r\n//     return(\r\n//     <DisplayUser user={user}/>)\r\n//     console.log(name));\r\n// };\r\n\r\nclass UserB extends Component {\r\n  state = {\r\n    hoverClassName: 'shadow-none',\r\n    hoverCardBg: 'rgba(255, 255, 255, 0.3)',\r\n    // hoverCardBg: 'light',\r\n    hoverCardText: 'white',\r\n    hoverFont: '16px'\r\n  };\r\n\r\n  // toggleRaised = () => this.setState({raised:!this.state.raised});\r\n\r\n  onMouseOver = () => {\r\n    this.setState({\r\n      hoverClassName: 'shadow-lg pl-2',\r\n      hoverCardBg: 'rgba(255, 255, 255, 0.5)',\r\n      // hoverCardBg: 'secondary',\r\n      hoverCardText: 'dark',\r\n      hoverFont: '18px'\r\n    });\r\n  };\r\n  onMouseOut = () => {\r\n    this.setState({\r\n      hoverClassName: 'shadow-none',\r\n      hoverCardBg: 'rgba(255, 255, 255, 0.3)',\r\n      // hoverCardBg: 'light',\r\n      hoverCardText: 'white',\r\n      hoverFont: '16px'\r\n    });\r\n  };\r\n  onMouseClick = () => {\r\n    this.setState({\r\n      hoverClassName: 'shadow-none',\r\n      hoverCardBg: 'dark',\r\n      hoverCardText: 'white'\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const name = this.props.user.name;\r\n    return (\r\n      <Link\r\n        style={{ textDecoration: 'none' }}\r\n        to={`/user/${this.props.user.id}`}\r\n      >\r\n        <Card\r\n          // bg={this.state.hoverCardBg}\r\n          text={this.state.hoverCardText}\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          className={this.state.hoverClassName}\r\n          style={{\r\n            margin: '20px 2px 20px 2px',\r\n            backdropFilter: 'blur(10px)',\r\n            backgroundColor: this.state.hoverCardBg\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Text\r\n            // style={{ fontSize: this.state.hoverFont }}\r\n            >\r\n              {name}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        {/* <div\r\n          class='shadow-sm p-3  rounded'\r\n          style={{\r\n            marginTop: '20px',\r\n            backdropFilter: 'blur(10px)',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.4)'\r\n          }}\r\n        >\r\n          {name}\r\n        </div> */}\r\n      </Link>\r\n\r\n      // </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserB;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Container,\r\n  ButtonBase\r\n} from '@material-ui/core';\r\n\r\nclass DisplayUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userData: []\r\n    };\r\n  }\r\n\r\n  //   userInfo = () => {\r\n  //     return this.props.state.userData;\r\n  //   };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`\r\n      )\r\n      .then(res => this.setState({ userData: res.data }));\r\n  }\r\n\r\n  render() {\r\n    const userInfo = this.state.userData;\r\n    console.log('hello');\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Card style={{ margin: '20px 2px 20px 2px' }} elevation={4}>\r\n            <ButtonBase>\r\n              <CardContent>\r\n                <Typography color='textPrimary'>\r\n                  Name : {userInfo.name}\r\n                  <br />\r\n                  Email : {userInfo.email}\r\n                </Typography>\r\n              </CardContent>\r\n            </ButtonBase>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUser;\r\n","import React, { Component } from 'react';\r\n// import User from './User';\r\nimport UserB from './UserB';\r\n\r\nimport DisplayUser from './DisplayUser';\r\n\r\nclass UserList extends Component {\r\n  dispUser = user => {\r\n    return <DisplayUser user={user} />;\r\n  };\r\n\r\n  render() {\r\n    console.log('userlist', this.props.users);\r\n    return this.props.users.map(user => (\r\n      // <Link onClick={() => console.log(user.name)}>\r\n\r\n      <UserB user={user} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nfunction AppHeaderB() {\r\n  return (\r\n    <div className='center-navbar'>\r\n      {/* <Navbar bg='dark' variant='dark'> */}\r\n      <Navbar\r\n        style={{\r\n          backdropFilter: 'blur(10px)',\r\n          backgroundColor: 'rgba(255,255,255,0.7)',\r\n          paddingBottom: '15px'\r\n          // marginBottom: '100px'\r\n        }}\r\n        variant='light'\r\n        // fixed='top'\r\n      >\r\n        <Navbar.Brand>User Info</Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='/react-user'>Home</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default AppHeaderB;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\n// import { Col, Image, Media, Row } from 'react-bootstrap';\r\nimport { Media, Image } from 'react-bootstrap';\r\nimport WorkRoundedIcon from '@material-ui/icons/WorkRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n// import EmailIcon from '@material-ui/icons/Email';\r\n// import LanguageIcon from '@material-ui/icons/Language';\r\n// import StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\r\n\r\nclass DisplayUserB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userData: [],\r\n      userImage: '',\r\n      dataLoaded: false\r\n    };\r\n  }\r\n\r\n  //   userInfo = () => {\r\n  //     return this.props.state.userData;\r\n  //   };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      axios\r\n        .get(\r\n          `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`\r\n        )\r\n        .then(res => this.setState({ userData: res.data, dataLoaded: true }));\r\n    }, 3000);\r\n\r\n    // this.setState({ userImage: 'https://source.unsplash.com/random' });\r\n    // this.setState({\r\n    //   userImage: `https://joeschmoe.io/api/v1/${this.state.userData.name}`\r\n    // });\r\n\r\n    // const { userData: userInfo, company, address } = this.state;\r\n  }\r\n\r\n  render() {\r\n    // const userInfo = this.state.userData;\r\n    const { userData: userInfo } = this.state;\r\n    // if (!userInfo.name) {\r\n    //   return <Skeleton variant='circle' width={100} height={100} />;\r\n    // }\r\n    // const company = this.state.userInfo.company;\r\n    // console.log(this.state.userData?.company?.name);\r\n\r\n    return (\r\n      <div>\r\n        {/* if (this.state.dataLoaded === false) {<ProgressBar animated now={45} />} */}\r\n        <Container>\r\n          <Card\r\n            // bg='dark'\r\n            // text='white'\r\n            filter={'blur(20px) '}\r\n            style={{\r\n              marginTop: '20px',\r\n              backdropFilter: 'blur(10px)',\r\n              backgroundColor: 'rgba(255, 255, 255, 0.3)'\r\n            }}\r\n            className='shadow-lg p-3 mb-3'\r\n          >\r\n            <Card.Header>\r\n              {userInfo.name ? (\r\n                <h5>{userInfo.name}</h5>\r\n              ) : (\r\n                <Skeleton variant='text' animation='wave' width='25%' />\r\n              )}\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              <Media>\r\n                {/* <Col xs={6} md={4}> */}\r\n\r\n                <Image\r\n                  // src='https://cdn3.iconfinder.com/data/icons/miniman-vol-1/65/_Cool_Tough_Guy-512.png'\r\n                  src={`https://joeschmoe.io/api/v1/${userInfo.name}`}\r\n                  roundedCircle\r\n                  width={100}\r\n                  height={100}\r\n                  className='mr-3'\r\n                  // thumbnail\r\n                />\r\n                {userInfo?.company?.name ? (\r\n                  <Media.Body>\r\n                    <h5>{userInfo.username}</h5>\r\n                    {/* <Container> */}\r\n                    <Card.Text>\r\n                      {/* <EmailIcon\r\n                      fontSize='small'\r\n                      className='text-white-50 bg-dark'\r\n                    />{' '} */}\r\n                      {userInfo.email ? (\r\n                        userInfo.email\r\n                      ) : (\r\n                        <Skeleton\r\n                          variant='text'\r\n                          animation='wave'\r\n                          width='25%'\r\n                          height='100px'\r\n                        />\r\n                      )}\r\n                      <br />\r\n                      {/* <LanguageIcon fontSize='small' />  */}\r\n                      {userInfo.website ? (\r\n                        userInfo.website\r\n                      ) : (\r\n                        <Skeleton variant='text' animation='wave' width='25%' />\r\n                      )}\r\n                      <br />\r\n                      {/* <StayCurrentPortraitIcon fontSize='small' />{' '} */}\r\n                      {userInfo.phone}\r\n                      <br />\r\n                    </Card.Text>\r\n                    {/* </Container> */}\r\n                    <Media>\r\n                      <WorkRoundedIcon />\r\n                      <Media.Body>\r\n                        <Card.Text>\r\n                          {userInfo?.company?.name}\r\n                          <br />\r\n\r\n                          <p className='text-white-50'>\r\n                            {userInfo?.company?.catchPhrase}\r\n                          </p>\r\n                        </Card.Text>\r\n                      </Media.Body>\r\n                    </Media>\r\n                    <Media>\r\n                      <HomeRoundedIcon />\r\n                      <Media.Body>\r\n                        <p>\r\n                          {userInfo?.address?.street},{' '}\r\n                          {userInfo?.address?.suite}\r\n                          <br />\r\n                          {userInfo?.address?.city},{' '}\r\n                          {userInfo?.address?.zipcode}\r\n                          <br />\r\n                          <div className='text-white-50'>\r\n                            <RoomOutlinedIcon />\r\n                            {userInfo?.address?.geo?.lat}\r\n                            {'   '}\r\n                            {userInfo?.address?.geo?.lat}\r\n                          </div>\r\n                        </p>\r\n                      </Media.Body>\r\n                    </Media>\r\n                  </Media.Body>\r\n                ) : (\r\n                  <Skeleton\r\n                    variant='rect'\r\n                    animation='wave'\r\n                    width='100%'\r\n                    height='250px'\r\n                  />\r\n                )}\r\n                {/* </Col> */}\r\n              </Media>\r\n              {/* <Container>\r\n                <Card.Text>\r\n                  {userInfo.email}\r\n                  <br />\r\n                  {userInfo.website}\r\n                </Card.Text>\r\n              </Container> */}\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUserB;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport UserList from './components/UserList';\nimport Container from '@material-ui/core/Container';\n// import AppHeader from './components/layout/Header';\nimport AppHeaderB from './components/layout/HeaderB';\n// import DisplayUser from './components/DisplayUser';\nimport DisplayUserB from './components/DisplayUserB';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then(res => this.setState({ users: res.data }));\n  }\n\n  render() {\n    return (\n      <div>\n        <AppHeaderB />\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path='/react-user'\n              render={props => (\n                <React.Fragment>\n                  <Container>\n                    <UserList users={this.state.users} />\n                  </Container>\n                </React.Fragment>\n              )}\n            />\n            <Route\n              path={`/user/:id`}\n              render={props => <DisplayUserB {...props} />}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}